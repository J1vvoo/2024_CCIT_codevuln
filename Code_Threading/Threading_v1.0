#!/bin/bash

# banner
banner(){
   clear
    echo "codevuln 설명 어쩌구 저쩌구 !!! ~~~"
}

# codevuln setting
codevuln_setting(){
   clear
   # directory setting
   echo -e "\033[32m[+] codevuln Setting\033[0m $@"
   sleep 2
   apt-get update
   apt-get install git -y
   apt-get install wget -y
   apt-get install vim -y
   apt-get install unzip -y
   apt-get install python3 -y
   apt-get install python3-pip -y
   pip install --upgrade pip
   pip install --upgrade urllib3 chardet
   mkdir /home/codevuln/
   mkdir /home/codevuln/codeql/
   mkdir /home/codevuln/semgrep/
   mkdir /home/codevuln/sonarqube/
   mkdir /home/codevuln/target-repo/
    
   # codeql install & setting
   echo -e "\033[32m[+] codeQL Install & Setting\033[0m $@"
   cd /home/codevuln/codeql

   apt install git -y
   git clone https://github.com/github/codeql /home/codevuln/codeql/codeql-repo
   echo -e "\033[32m[+] codeql repo download complete\033[0m $@"
   sleep 2

   LANGUAGES=("java" "javascript" "python" "go")
   for lang in "${LANGUAGES[@]}"; do
      SOURCE_DIR="/home/codevuln/codeql/codeql-repo/${lang}/ql/src/Security"
      TARGET_DIR="/home/codevuln/codeql/${lang}.ql"
      mkdir -p "$TARGET_DIR"
      find "$SOURCE_DIR" -type f -name "*.ql" | while read file; do
         parent_dir=$(basename "$(dirname "$file")")
         filename=$(basename "$file")
         new_file_path="$TARGET_DIR/${parent_dir}_${filename}"
         cp "$file" "$new_file_path"
      done
   done

   wget https://github.com/github/codeql-cli-binaries/releases/download/v2.16.3/codeql-linux64.zip
   unzip codeql-linux64.zip
   mv ./codeql ./codeql-cli
   rm -rf /home/codevuln/codeql/codeql-linux64.zip
   cd ~
   echo 'export PATH=$PATH:/home/codevuln/codeql/codeql-cli/' >> ~/.bashrc
   source ~/.bashrc
   source ./.bashrc
   echo -e "\033[32m[+] codeQL Install & Setting complete\033[0m $@"
   sleep 2

   # semgrep install & setting
   echo -e "\033[32m[+] Semgrep Install & Setting\033[0m $@"
   sleep 2
   cd /home/codevuln/semgrep/
   pip install semgrep
   read -r -d '' python_code << 'EOF'
import json
import csv

with open('results.json') as f:
    data = json.load(f)

with open('result.csv', 'w', newline='') as csvfile:
    fieldnames = ['check_id', 'path', 'start_line', 'end_line', 'message']
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

    writer.writeheader()

    for result in data['results']:
        writer.writerow({
            'check_id': result['check_id'],
            'path': result['path'],
            'start_line': result['start']['line'],
            'end_line': result['end']['line'],
            'message': result['extra']['message']
        })
EOF
   echo "$python_code" > /home/codevuln/semgrep/json_csv.py
   chmod +x /home/codevuln/semgrep/json_csv.py

   echo -e "\033[32m[README] Please copy the URL and login from the browser\033[0m $@"
   sleep 3
   semgrep login

   sleep 3
}

# git clone
run_query(){
   # directory setting
   clear
   echo ""
   echo -e "\033[32m[+] Directory Setting\033[0m $@"
   read -p "Enter top-level directory to create (repo_name) : " directory_name
   echo "\033[32m[+] Make Directory : /home/codevuln/target-repo/$directory_name\033[0m $@"
   sleep 3
   mkdir "/home/codevuln/target-repo/$directory_name"
   mkdir "/home/codevuln/target-repo/$directory_name/codeql"
   mkdir "/home/codevuln/target-repo/$directory_name/semgrep"
   mkdir "/home/codevuln/target-repo/$directory_name/sonarqube"

   # git clone
   echo -e "\033[32m[+] Git clone\033[0m $@"
   read -p "Enter git clone address : " repository_url
   clone_directory_name="$directory_name"-repo
   mkdir -p /home/codevuln/target-repo/$directory_name/$clone_directory_name   
   echo -e "\033[32m[+] git clone : /home/codevuln/target-repo/$directory_name/$clone_directory_name\033[0m $@"
   sleep 3
   git clone --depth=1 "$repository_url" "/home/codevuln/target-repo/$directory_name/$clone_directory_name"

   # select language
   clear
   echo -e "\033[32m[+] codeQL\033[0m $@"
   echo ""
   echo " -------------------- "
   echo "| 1. python          |"
   echo "| 2. java            |"
   echo "| 3. javascript      |"    
   echo "| 4. go              |"
   echo " --------------------"
   echo ""
   read -p "Input number : " choice

   case $choice in
      1)
            language="python"
            ;;
      2)
            language="java"
            ;;
      3)
            language="javascript"
            ;;
      4)
            language="go"
            ;;
      *)
            exit 0
            ;;
   esac

   codeql(){
      echo -e "\033[32m[+] create database\033[0m $@"
      sleep 2
      codeql database create --language="$language" --source-root="/home/codevuln/target-repo/$directory_name/$clone_directory_name" "/home/codevuln/target-repo/$directory_name/codeql/codeql-db-$directory_name"

      cwe_directories=$(find /home/codevuln/codeql/codeql-repo/$language/ql/src/Security/ -type d -name "CWE*")

      for dir in $cwe_directories; do
         ql_files=$(find "$dir" -type f -name "*.ql")
      
      for ql_file in $ql_files; do
         echo "Analyzing $ql_file..."
         output_file="/home/codevuln/target-repo/$directory_name/codeql/$(basename ${ql_file%.ql}).csv"
         codeql database analyze "/home/codevuln/target-repo/$directory_name/codeql/codeql-db-$directory_name" "$ql_file" --format=csv --output="$output_file"
         echo "Output saved to $output_file"
         done
      done

      echo -e "\033[32mcodeql ok\033[0m $@"    
   }
   
   semgrep(){
      # semgrep
      clear
      echo -e "\033[32m[RUN] Semgrep default scan\033[0m $@"
      cd /home/codevuln/target-repo/$directory_name/semgrep/
      cp /home/codevuln/semgrep/json_csv.py ./
      sleep 1
      semgrep --config=p/default /home/codevuln/target-repo/$directory_name/$clone_directory_name --json > ./results.json
      sleep 1
      python3 ./json_csv.py
      mv ./result.csv ./default.csv
      rm -rf ./results.json
      rm -rf ./json_csv.py
      sleep 2

      echo -e "\033[32m[RUN] Semgrep cwe-top-25 scan\033[0m $@"
      cd /home/codevuln/target-repo/$directory_name/semgrep
      cp /home/codevuln/semgrep/json_csv.py ./
      sleep 2            
      semgrep --config=p/cwe-top-25 /home/codevuln/target-repo/$directory_name/$clone_directory_name --json > ./results.json
      sleep 2
      python3 ./json_csv.py
      mv ./result.csv ./cwe-top-25.csv
      rm -rf ./results.json
      rm -rf ./$clone_directory_name/json_csv.py        
      sleep 2

      echo -e "\033[32m[RUN] Semgrep owasp-top-ten scan\033[0m $@"
      cd /home/codevuln/target-repo/$directory_name/semgrep
      cp /home/codevuln/semgrep/json_csv.py ./
      sleep 2            
      semgrep --config=p/owasp-top-ten /home/codevuln/target-repo/$directory_name/$clone_directory_name --json > ./results.json
      sleep 2
      python3 ./json_csv.py
      mv ./result.csv ./owasp-top-ten.csv
      rm -rf ./results.json
      rm -rf ./$clone_directory_name/json_csv.py
      sleep 2

      echo -e "\033[32m[RUN] Semgrep r2c-security-audit scan\033[0m $@"
      cd /home/codevuln/target-repo/$directory_name/semgrep
      cp /home/codevuln/semgrep/json_csv.py ./
      sleep 2            
      semgrep --config=p/r2c-security-audit /home/codevuln/target-repo/$directory_name/$clone_directory_name --json > ./results.json
      sleep 2
      python3 ./json_csv.py
      mv ./result.csv ./r2c-security-audit.csv
      rm -rf ./results.json
      rm -rf ./$clone_directory_name/json_csv.py
      sleep 2

      echo -e "\033[32m[RUN] Semgrep command-injection scan\033[0m $@"
      cd /home/codevuln/target-repo/$directory_name/semgrep
      cp /home/codevuln/semgrep/json_csv.py ./
      sleep 2            
      semgrep --config=p/command-injection /home/codevuln/target-repo/$directory_name/$clone_directory_name --json > ./results.json
      sleep 2
      python3 ./json_csv.py
      mv ./result.csv ./command-injection.csv
      rm -rf ./results.json
      rm -rf ./$clone_directory_name/json_csv.py
      sleep 2       

      echo -e "\033[32m[RUN] Semgrep insecure-transport scan\033[0m $@"
      cd /home/codevuln/target-repo/$directory_name/semgrep
      cp /home/codevuln/semgrep/json_csv.py ./
      sleep 2            
      semgrep --config=p/insecure-transport /home/codevuln/target-repo/$directory_name/$clone_directory_name --json > ./results.json
      sleep 2
      python3 ./json_csv.py
      mv ./result.csv ./insecure-transport.csv
      rm -rf ./results.json
      rm -rf ./$clone_directory_name/json_csv.py
      sleep 2                           
   
      echo -e "\033[32m[RUN] Semgrep jwt scan\033[0m $@"
      cd /home/codevuln/target-repo/$directory_name/semgrep
      cp /home/codevuln/semgrep/json_csv.py ./
      sleep 2            
      semgrep --config=p/jwt /home/codevuln/target-repo/$directory_name/$clone_directory_name --json > ./results.json
      sleep 2
      python3 ./json_csv.py
      mv ./result.csv ./jwt.csv
      rm -rf ./results.json
      rm -rf ./$clone_directory_name/json_csv.py
      sleep 2

      echo -e "\033[32m[RUN] Semgrep secrets scan\033[0m $@"         
      cd /home/codevuln/target-repo/$directory_name/semgrep
      cp /home/codevuln/semgrep/json_csv.py ./
      sleep 2            
      semgrep --config=p/secrets /home/codevuln/target-repo/$directory_name/$clone_directory_name --json > ./results.json
      sleep 2
      python3 ./json_csv.py
      mv ./result.csv ./secrets.csv
      rm -rf ./results.json
      rm -rf ./$clone_directory_name/json_csv.py
      sleep 2

      echo -e "\033[32m[RUN] Semgrep sql-injection scan\033[0m $@"   
      cd /home/codevuln/target-repo/$directory_name/semgrep
      cp /home/codevuln/semgrep/json_csv.py ./
      sleep 2            
      semgrep --config=p/sql-injection /home/codevuln/target-repo/$directory_name/$clone_directory_name --json > ./results.json
      sleep 2
      python3 ./json_csv.py
      mv ./result.csv ./sql-injection.csv
      rm -rf ./results.json
      rm -rf ./$clone_directory_name/json_csv.py
      sleep 2

      echo -e "\033[32m[RUN] Semgrep xss scan\033[0m $@"      
      cd /home/codevuln/target-repo/$directory_name/semgrep
      cp /home/codevuln/semgrep/json_csv.py ./
      sleep 2            
      semgrep --config=p/xss /home/codevuln/target-repo/$directory_name/$clone_directory_name --json > ./results.json
      sleep 2
      python3 ./json_csv.py
      mv ./result.csv ./xss.csv
      rm -rf ./results.json
      rm -rf ./$clone_directory_name/json_csv.py
      sleep 2
   }

   echo -e "\033[32mSemgrep OK\033[0m $@"    

   #sonarqube
   
   codeql &
   semgrep &

}


clear

banner
echo ""
echo " --------------------------------  "
echo "|                                | "
echo "| 1. codevuln Install & Setting  | "
echo "| 2. Run Query                   | "
echo "|                                | "
echo " --------------------------------  "
echo ""
read -p "Selection Process : " process_number

case $process_number in

   1) 
      codevuln_setting
      ;;
   2)
      run_query
      ;;

   *)
      exit 0
      ;;
esac
