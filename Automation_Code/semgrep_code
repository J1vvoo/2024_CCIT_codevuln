#!/bin/bash

# semgrep install & setting
semgrep_install_setting(){
   clear
   echo -e "\033[32m[+] apt update & apt install git\033[0m $@"
   apt-get update
   apt install git -y

   echo -e "\033[32m[RUN] semgrep Install & Setting\033[0m $@"
   mkdir -p /home/semgrep/
   cd /home/semgrep/
   sleep 2
   apt-get install python3
   apt-get install python3-pip
   pip install semgrep

   # json transform csv
   echo -e "\033[32m[RUN] json transform csv\033[0m $@"
   sleep 2
   cd /home/semgrep/
   read -r -d '' python_code << 'EOF'
import json
import csv

with open('results.json') as f:
   data = json.load(f)

with open('result.csv', 'w', newline='') as csvfile:
   fieldnames = ['check_id', 'path', 'start_line', 'end_line', 'message']
   writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

   writer.writeheader()

   for result in data['results']:
      writer.writerow({
         'check_id': result['check_id'],
         'path': result['path'],
         'start_line': result['start']['line'],
         'end_line': result['end']['line'],
         'message': result['extra']['message']
      })
EOF

   echo "$python_code" > /home/semgrep/json_csv.py
   chmod +x /home/semgrep/json_csv.py

   sleep 3

   echo -e "\033[32m[README] Please copy the URL and login from the browser\033[0m $@"
   sleep 3
   semgrep login
}

run_query(){

   # top directory
   echo -e "\033[32m[+] Install target-repo\033[0m $@"
   read -p "Enter top-level directory to create (repo_name) : " directory_name
   mkdir "/home/semgrep/$directory_name"

   # git clone
   read -p "Enter git clone address : " repository_url
   clone_directory_name="$directory_name"-repo
   mkdir -p /home/semgrep/$directory_name/$clone_directory_name   
   echo -e "\033[32m[+] git clone\033[0m $@"
   git clone --depth=1 "$repository_url" "/home/semgrep/$directory_name/$clone_directory_name"

   # Selection Process
   clear
   echo ""   
   echo "  1. default"
   echo "  2. cwe-top-25"
   echo "  3. owasp-top-ten"
   echo "  4. r2c-security-audit"
   echo "  5. command-injection"   
   echo "  6. insecure-transport"
   echo "  7. jwt"
   echo "  8. secrets"
   echo "  9. sql-injection"
   echo "  10. XSS"
   echo "  11. All Run Query"
   echo ""
   read -p "  Selection Process : " process_number

   case $process_number in

      1)
            echo -e "\033[32m[RUN] Semgrep default scan\033[0m $@"
            cd /home/semgrep/$directory_name
            cp ../json_csv.py ./
            sleep 2
            semgrep --config=p/default ./$clone_directory_name --json > ./results.json
            sleep 2
            python3 ./json_csv.py
            mv ./result.csv ./default.csv
            rm -rf ./results.json
            rm -rf ./$clone_directory_name/json_csv.py
            ;;
      2)
            echo -e "\033[32m[RUN] Semgrep cwe-top-25 scan\033[0m $@"
            cd /home/semgrep/$directory_name
            cp ../json_csv.py ./
            sleep 2            
            semgrep --config=p/cwe-top-25 ./$clone_directory_name --json > ./results.json
            sleep 2
            python3 ./json_csv.py
            mv ./result.csv ./cwe-top-25.csv
            rm -rf ./results.json
            rm -rf ./$clone_directory_name/json_csv.py            
            ;;
      3)
            echo -e "\033[32m[RUN] Semgrep owasp-top-ten scan\033[0m $@"
            cd /home/semgrep/$directory_name
            cp ../json_csv.py ./
            sleep 2            
            semgrep --config=p/owasp-top-ten ./$clone_directory_name --json > ./results.json
            sleep 2
            python3 ./json_csv.py
            mv ./result.csv ./owasp-top-ten.csv
            rm -rf ./results.json
            rm -rf ./$clone_directory_name/json_csv.py            
            ;;
      4)
            echo -e "\033[32m[RUN] Semgrep r2c-security-audit scan\033[0m $@"
            cd /home/semgrep/$directory_name
            cp ../json_csv.py ./
            sleep 2            
            semgrep --config=p/r2c-security-audit ./$clone_directory_name --json > ./results.json
            sleep 2
            python3 ./json_csv.py
            mv ./result.csv ./r2c-security-audit.csv
            rm -rf ./results.json
            rm -rf ./$clone_directory_name/json_csv.py            
            ;;
      5)
            echo -e "\033[32m[RUN] Semgrep command-injection scan\033[0m $@"
            cd /home/semgrep/$directory_name
            cp ../json_csv.py ./
            sleep 2            
            semgrep --config=p/command-injection ./$clone_directory_name --json > ./results.json
            sleep 2
            python3 ./json_csv.py
            mv ./result.csv ./command-injection.csv
            rm -rf ./results.json
            rm -rf ./$clone_directory_name/json_csv.py            
            ;;            
      6)
            echo -e "\033[32m[RUN] Semgrep insecure-transport scan\033[0m $@"
            cd /home/semgrep/$directory_name
            cp ../json_csv.py ./
            sleep 2            
            semgrep --config=p/insecure-transport ./$clone_directory_name --json > ./results.json
            sleep 2
            python3 ./json_csv.py
            mv ./result.csv ./insecure-transport.csv
            rm -rf ./results.json
            rm -rf ./$clone_directory_name/json_csv.py            
            ;;            
      7)
            echo -e "\033[32m[RUN] Semgrep jwt scan\033[0m $@"
            cd /home/semgrep/$directory_name
            cp ../json_csv.py ./
            sleep 2            
            semgrep --config=p/jwt ./$clone_directory_name --json > ./results.json
            sleep 2
            python3 ./json_csv.py
            mv ./result.csv ./jwt.csv
            rm -rf ./results.json
            rm -rf ./$clone_directory_name/json_csv.py            
            ;;
      8)
            echo -e "\033[32m[RUN] Semgrep secrets scan\033[0m $@"         
            cd /home/semgrep/$directory_name
            cp ../json_csv.py ./
            sleep 2            
            semgrep --config=p/secrets ./$clone_directory_name --json > ./results.json
            sleep 2
            python3 ./json_csv.py
            mv ./result.csv ./secrets.csv
            rm -rf ./results.json
            rm -rf ./$clone_directory_name/json_csv.py            
            ;;
      9)
            echo -e "\033[32m[RUN] Semgrep sql-injection scan\033[0m $@"   
            cd /home/semgrep/$directory_name
            cp ../json_csv.py ./
            sleep 2            
            semgrep --config=p/sql-injection ./$clone_directory_name --json > ./results.json
            sleep 2
            python3 ./json_csv.py
            mv ./result.csv ./sql-injection.csv
            rm -rf ./results.json
            rm -rf ./$clone_directory_name/json_csv.py            
            ;;
      10)
            echo -e "\033[32m[RUN] Semgrep xss scan\033[0m $@"      
            cd /home/semgrep/$directory_name
            cp ../json_csv.py ./
            sleep 2            
            semgrep --config "p/xss" ./$clone_directory_name --json > ./results.json
            sleep 2
            python3 ./json_csv.py
            mv ./result.csv ./xss.csv
            rm -rf ./results.json
            rm -rf ./$clone_directory_name/json_csv.py            
            ;;
   esac

}

clear
echo ""
echo " ------------------------------  "
echo "|                               | "
echo "| 1. semgrep Install & Setting  | "
echo "| 2. Run Query                  | "
echo "|                               | "
echo " ------------------------------  "
echo ""
read -p "Selection Process : " process_number

case $process_number in

   1) 
      semgrep_install_setting
      ;;
   2)
      run_query
      ;;

   *)
      exit 0
      ;;
esac
