#!/bin/bash

# print banner
echo " ▄▄▄       █    ██ ▄▄▄█████▓ ▒█████"
echo "▒████▄     ██  ▓██▒▓  ██▒ ▓▒▒██▒  ██▒"
echo "▒██  ▀█▄  ▓██  ▒██░▒ ▓██░ ▒░▒██░  ██▒"
echo "░██▄▄▄▄██ ▓▓█  ░██░░ ▓██▓ ░ ▒██   ██░"
echo " ▓█   ▓██▒▒▒█████▓   ▒██▒ ░ ░ ████▓▒░"
echo " ▒▒   ▓▒█░░▒▓▒ ▒ ▒   ▒ ░░   ░ ▒░▒░▒░"
echo "  ▒   ▒▒ ░░░▒░ ░ ░     ░      ░ ▒ ▒░"
echo "  ░   ▒    ░░░ ░ ░   ░      ░ ░ ░ ▒"
echo "      ░  ░   ░                  ░ ░"
echo " ▄████▄   ▒█████  ▓█████▄ ▓█████   █████   ██▓"
echo "▒██▀ ▀█  ▒██▒  ██▒▒██▀ ██▌▓█   ▀ ▒██▓  ██▒▓██▒"
echo "▒▓█    ▄ ▒██░  ██▒░██   █▌▒███   ▒██▒  ██░▒██░"
echo "▒▓▓▄ ▄██▒▒██   ██░░▓█▄   ▌▒▓█  ▄ ░██  █▀ ░▒██░"
echo "▒ ▓███▀ ░░ ████▓▒░░▒████▓ ░▒████▒░▒███▒█▄ ░██████▒"
echo "░ ░▒ ▒  ░░ ▒░▒░▒░  ▒▒▓  ▒ ░░ ▒░ ░░░ ▒▒░ ▒ ░ ▒░▓  ░"
echo "  ░  ▒     ░ ▒ ▒░  ░ ▒  ▒  ░ ░  ░ ░ ▒░  ░ ░ ░ ▒  ░"
echo "░        ░ ░ ░ ▒   ░ ░  ░    ░      ░   ░   ░ ░   "
echo "░ ░          ░ ░     ░       ░  ░    ░        ░  ░"
echo "░                  ░                              "
echo ""
echo ""
# codeQL Install & Setting
codeql_install_setting(){
	if [ ! -d "/home/codeQL" ]; then 
		echo -e "\033[32m[RUN] codeQL Install & Setting\033[0m $@"
		mkdir -p /home/codeQL/target-code
		echo -e "\033[32m[+] /home/codeQL directory creation complete\033[0m $@"
		cd /home/codeQL
		sleep 2
                    
		apt-get update
		apt install git -y
		git clone https://github.com/github/codeql /home/codeQL/codeql-repo
		echo -e "\033[32m[+] codeql repo download complete\033[0m $@"
		sleep 2
                    
		wget https://github.com/github/codeql-cli-binaries/releases/download/v2.16.3/codeql-linux64.zip
		unzip codeql-linux64.zip 
		mv ./codeql ./codeql-cli
		rm -rf /home/codeQL/codeql-linux64.zip
		echo -e "\033[32m[+] codeql-cli download complete\033[0m $@"
		sleep 2
	
		echo "export PATH=$PATH:/home/codeQL/codeql-cli/" >> ~/.bashrc
		source ~/.bashrc
                echo -e "\033[32m[+] environment variable setting complete\033[0m $@"
		sleep 2

		cd /home/codeQL
		ls -l
		codeql
	fi
}

# codeql_run
run_query(){

        # parsing query files
        find_ql_files() {
                local directory="$1"
                find "$directory" -type f -name "*.ql"
        }

        # top directory
        read -p "Enter top-level directory to create : " directory_name
        mkdir "/home/codeQL/target-code/$directory_name"
        cd "/home/codeQL/target-code/$directory_name"

        # git clone
        read -p "Enter git clone address : " repository_url
        clone_directory_name="$directory_name"-repo
        echo -e "\033[32m[+] git clone\033[0m $@"
        git clone --depth=1 "$repository_url" "/home/codeQL/target-code/$directory_name/$clone_directory_name"

        # language selection
        clear
        echo ""
        echo " -------------------- "
        echo "| 1. python          |"
        echo "| 2. java            |"
        echo "| 3. javascript      |"    
        echo "| 4. go              |"
        echo "| 5. exit            |"
        echo " --------------------"
        echo ""
        read -p "Input number : " choice

        case $choice in
                1)
                        language="python"
                        ;;
                2)
                        language="java"
                        ;;
                3)
                        language="javascript"
                        ;;
                4)
                        language="go"W
                        ;;
                5)
                        echo "Exit."
                        exit 0
                        ;;
                *)
                        echo "Number that doesn't exist."
                        ;;
        esac

        # create database
        echo -e "\033[32m[+] create database\033[0m $@"
        sleep 2
        codeql database create --language="$language" --source-root="/home/codeQL/target-code/$directory_name/$clone_directory_name" codeql-db-"$directory_name"

        # run query
        for ql_file in $(find_ql_files "/home/codeQL/codeql-repo/$language/ql/src/Security"); do
                echo -e "\033[32m[RUN] codeQL query\033[0m $@"
                codeql database analyze codeql-db-"$directory_name" "$ql_file" --format=csv --output=/home/codeQL/target-code/$directory_name/${ql_file%.ql}.csv
        
                # delete csv file size 0
                csv_file="${ql_file%.ql}.csv"
                if [ ! -s "$csv_file" ]; then
                        echo "$csv_file Delete csv"
                        rm "$csv_file"
                fi
        done

        #codeql database analyze codeql-db-"$directory_name" /home/codeQL/codeql-repo/"$language"/ql/src/Security/CWE-079/ReflectedXss.ql --format=csv --output=/home/codeQL/target-code/$directory_name/reflectedxss.csv
}

echo " ------------------------------  "
echo "|                              | "
echo "| 1. codeQL Install & Setting  | "
echo "| 2. Run Query                 | "
echo "|                              | "
echo " ------------------------------  "
echo ""
read -p "Input number : " number

case $number in
        1)
                codeql_install_setting
                ;;
        2)
                run_query
                ;;
        *)
                exit 0
                ;;
esac
